" Globals

let mapleader=" "

" Options
" https://github.com/JetBrains/ideavim/blob/master/doc/set-commands.md

set hlsearch
set ideajoin
set ignorecase
set number
set smartcase

" https://github.com/JetBrains/ideavim/blob/master/doc/sethandler.md

sethandler <c-d> a:vim
sethandler <c-r> a:vim
sethandler <c-u> a:vim
sethandler <c-w> a:vim

" Plugins
" https://github.com/JetBrains/ideavim/blob/master/doc/IdeaVim%20Plugins.md

Plug 'justinmk/vim-sneak'
Plug 'machakann/vim-highlightedyank'
Plug 'michaeljsmith/vim-indent-object'
Plug 'preservim/nerdtree'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'vim-matchit'
Plug 'vim-scripts/ReplaceWithRegister' " Use gr instead of p when you want to replace but not yank
Plug 'vim-scripts/argtextobj.vim'
" https://plugins.jetbrains.com/plugin/15976-which-key
set which-key

" Keymaps

" Use ; to enter command mode instead of :
nmap ; :
vmap ; :

" Hide other windows (:only, :on)
" map <Leader>o :action CloseAllEditorsButActive<CR>
map <Leader>o <Action>(Unsplit) \| <Action>(CloseAllEditorsButActive)

" Yank, delete, and paste
vmap <Leader>y "+y
vmap <Leader>d "+d
nmap <Leader>p "+p
nmap <Leader>P "+P
vmap <Leader>p "+p
vmap <Leader>P "+P

" Re-select blocks after indenting
xnoremap < <gv
xnoremap > >gv|
nnoremap > >>_
nnoremap < <<_

" spf13 and SpaceVim-like bindings
nnoremap <silent> <Leader>cc :cclose<CR>
nnoremap <silent> <Leader>co :copen<CR>
nnoremap <silent> <Leader>lc :lclose<CR>
nnoremap <silent> <Leader>lo :lopen<CR>
nnoremap <silent> <Leader>q :q<CR>
nnoremap <silent> <Leader>w :w<CR>

nmap ]e <Action>(MoveLineDown)
nmap [e <Action>(MoveLineUp)

" Disable Ex mode
nnoremap Q <nop>

" Clear current search highlight by double tapping //
nmap <silent> // :nohlsearch<CR>

" https://vim.fandom.com/wiki/Selecting_your_pasted_text
" After pasting, type gp to select the pasted text in visual mode.
" This is similar to the standard gv which you can type to select the last visually-selected text.
nnoremap <expr> gp '`[' . strpart(getregtype(), 0, 1) . '`]'

" https://www.reddit.com/r/vim/comments/uorjet/comment/i8ie8om/
" 0 once = to the first character of the line
" 0 twice = to the first non-blank character of the line
nnoremap <expr> 0 (col('.') == 1) ? '^' : '0'

" IdeaVim

nnoremap <Leader>h :action ShowHoverInfo<cr>
nnoremap <Leader>db :action ToggleLineBreakpoint<cr>

nnoremap <Leader>fg :action FindInPath<cr>
nnoremap <Leader>fs :action GotoFile<cr>
" nnoremap <Leader>fs :action SearchEverywhere<cr>
nnoremap <Leader>f<Leader>f :action SearchEverywhere<cr>

map <Leader>tf <Action>(EditorTextStart) \| <Action>(RunClass) \| <Action>(Back)
map <Leader>tn <Action>(RunClass)
map <Leader>tl <Action>(Rerun)
" TODO test suite (equivalient of src/test -> Run 'Tests' in '<app name>'.
" probably need a macro like tf that opens project, chooses test root, and Run
" map <Leader>ts :action Gradle.RunTask:test<CR>
map <Leader>tq <Action>(Stop)

nmap ]d <Action>(GotoNextError)
nmap [d <Action>(GotoPreviousError)

nmap ]h :action Diff.NextChange<CR>
nmap [h :action Diff.PrevChange<CR>

nnoremap <Leader>gt :action Gradle.ExecuteTask<CR>

" TODO how to move cursor from Terminal/Structure back to editor?
nnoremap <Leader>at :action ActivateTerminalToolWindow<CR>
nnoremap <C-w>t     :action ActivateTerminalToolWindow<CR>
nnoremap <Leader>as :action ActivateStructureToolWindow<CR>
nnoremap <C-w>s     :action ActivateStructureToolWindow<CR>

" Refactor This
nnoremap <Leader>rt :action Refactorings.QuickListPopupAction<CR>

" Git Blame
nnoremap <Leader>gb :action Annotate<CR>

" nnoremap - :action SelectInProjectView<CR>
" TODO: try NERDTree instead:
nnoremap - :NERDTreeFind<CR>

" Code Symbols (LazyVim default Aerial keymap)
nnoremap <leader>cs :action ShowNavBar<CR>

nnoremap <Leader>bs :action RecentFiles<CR>

" Close all windows (except editor windows)
nnoremap <Leader><Leader>o :action HideAllWindows<CR>

" LazyVim via https://gist.github.com/mikeslattery/d2f2562e5bbaa7ef036cf9f5a13deff5
nmap <leader>us :setlocal spell!<CR>
nmap <leader>uw :setlocal wrap!<CR>
nmap <leader>ud <Action>(ActivateProblemsViewToolWindow)
nmap <leader><tab>l <Action>(GoToLastTab)
nmap <leader><tab>o <Action>(CloseOtherTabs)
nmap <leader><tab>f <Action>(GoToTab1)
nmap <leader><tab>] <Action>(NextTab)
nmap <leader><tab>[ <Action>(PreviousTab)
nmap <leader><tab>d <Action>(CloseContent)
" Goto Definition
nmap gd <Action>(GotoDeclaration)
" References
" nmap gr <Action>(FindUsages) -- interfered with ReplaceWithRegister
nmap gR <Action>(FindUsages) -- interfered with ReplaceWithRegister
nnoremap <Leader>fu :action FindUsages<cr>
" Goto Implementation
nmap gI <Action>(GotoImplementation)
" Goto Type Definition
nmap gy <Action>(GotoTypeDeclaration)
" Goto Declaration
nmap gD <Action>(GotoDeclaration)
" Signature Help
nmap gK <Action>(ParameterInfo)

" IDE keymaps:
" Focus Editor = <esc>

" TODO: map :A to cmd+shift+T. might have to use a macro and EditorTextStart first to handle using it within a @Nested test class
