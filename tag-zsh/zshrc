# .zshrc

# Uncomment and run zprof at the end to profile startup time
# zmodload zsh/zprof

# Source Antigen
source /usr/local/share/antigen/antigen.zsh

# Configure Antigen
antigen use prezto
antigen bundles <<EOBUNDLES
  sorin-ionescu/prezto modules/helper
  sorin-ionescu/prezto modules/environment
  sorin-ionescu/prezto modules/terminal
  sorin-ionescu/prezto modules/editor
  sorin-ionescu/prezto modules/history
  sorin-ionescu/prezto modules/directory
  sorin-ionescu/prezto modules/spectrum
  sorin-ionescu/prezto modules/utility
  sorin-ionescu/prezto modules/ssh
  sorin-ionescu/prezto modules/completion
  sorin-ionescu/prezto modules/fasd
  sorin-ionescu/prezto modules/syntax-highlighting
  sorin-ionescu/prezto modules/history-substring-search
  sorin-ionescu/prezto modules/prompt
  zsh-users/zsh-autosuggestions
EOBUNDLES
antigen apply

LANG='en_US.UTF-8'
LC_COLLATE='en_US.UTF-8'
LC_CTYPE='en_US.UTF-8'
LC_MESSAGES='en_US.UTF-8'
LC_MONETARY='en_US.UTF-8'
LC_NUMERIC='en_US.UTF-8'
LC_TIME='en_US.UTF-8'
LC_ALL='en_US.UTF-8'

# Aliases
alias brew-refill='(set -x; brew update && brew upgrade && brew cask upgrade && brew cleanup && brew doctor)'
alias ctags="`brew --prefix`/bin/ctags" # Use ctags from homebrew
alias gw="./gradlew"
alias kc="kubectl"

# cat with syntax highlighting
alias cats="highlight --out-format xterm256 --quiet --force --style solarized-light -- $1"

# common typos...
alias gits="git s"

# vi-mode bindings
bindkey -v

# vi-mode text objects
autoload -U select-bracketed
autoload -U select-quoted
zle -N select-bracketed
zle -N select-quoted
for m in visual viopp; do
  for c in {a,i}${(s..)^:-'()[]{}<>bB'}; do
    bindkey -M $m $c select-bracketed
  done
  for c in {a,i}{\',\",\`}; do
    bindkey -M $m $c select-quoted
  done
done

# vi-mode surround
autoload -Uz surround
zle -N delete-surround surround
zle -N add-surround surround
zle -N change-surround surround
bindkey -a cs change-surround
bindkey -a ds delete-surround
bindkey -a ys add-surround
bindkey -M visual S add-surround

# History search
bindkey '^R' history-incremental-search-backward
bindkey '^S' history-incremental-search-forward
bindkey '^P' history-search-backward
bindkey '^N' history-search-forward

# Bind UP and DOWN arrow keys (compatibility fallback
# for Ubuntu 12.04, Fedora 21, and MacOSX 10.9 users)
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# Movements
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word
bindkey '^w' backward-kill-word

# Disable C-s
stty -ixon

# https://www.gitignore.io/docs#-install-command-line
function gi() { curl -L -s https://www.gitignore.io/api/$@ ;}

MOTD_SCRIPT="$HOME/git/github.com/modille/motd/motd.sh"
[[ -s $MOTD_SCRIPT ]] && source $MOTD_SCRIPT

# asdf
[[ -s "/usr/local/opt/asdf/asdf.sh" ]] && source /usr/local/opt/asdf/asdf.sh
[[ -s "/usr/local/etc/bash_completion.d/asdf.bash" ]] && source /usr/local/etc/bash_completion.d/asdf.bash

# AWS CLI completion
AWS_COMPLETER="/usr/local/bin/aws_zsh_completer"
[[ -s $AWS_COMPLETER ]] && source $AWS_COMPLETER

# Base16 Shell
BASE16_SHELL="$HOME/.config/base16-shell/"
[ -n "$PS1" ] && [ -s $BASE16_SHELL/profile_helper.sh ] && eval "$($BASE16_SHELL/profile_helper.sh)"

# NVM
export NVM_DIR="/Users/odillem2/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"

# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

# rbenv
eval "$(rbenv init -)"

# direnv
if hash direnv 2>/dev/null; then
  eval "$(direnv hook `basename $SHELL`)"
fi

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[[ -x $(command -v rg) ]] && export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*" --glob "!*.class"'

# k8s completions (cached)
# Inspired by:
#   https://github.com/belak/prezto-contrib/blob/356c8e29dd97268fbc9050a6c40da69b3501cf62/contrib-kubernetes/init.zsh#L13-L22
# With cache dir from completion module:
#   https://github.com/sorin-ionescu/prezto/blob/1f4601e44c989b90dc7314b151891fa60a101251/modules/completion/init.zsh#L47-L49
__kubectl_completion_file="${ZDOTDIR:-$HOME}/.zcompcache/kubectl.zsh"
__kubectl_command="${commands[kubectl]}"
if [[ "${__kubectl_command}" -nt "${__kubectl_completion_file}" || ! -s "${__kubectl_completion_file}" ]]; then
  ${__kubectl_command} completion zsh >! "${__kubectl_completion_file}" 2> /dev/null
fi
source "${__kubectl_completion_file}"
unset __kubectl_completion_file __kubectl_command

# Completions
MODILLE_COMPLETIONS="$HOME/git/github.com/modille/completions/`basename $SHELL`"
[[ -d $MODILLE_COMPLETIONS ]] && fpath=($MODILLE_COMPLETIONS $fpath)

# Gradle completion
GRADLE_COMPLETION="$HOME/git/github.com/gradle/gradle-completion"
[[ -d $GRADLE_COMPLETION ]] && fpath=($GRADLE_COMPLETION $fpath)

# rbenv completion
RBENV_COMPLETER="$HOME/git/github.com/rbenv/rbenv/completions/rbenv.zsh"
[[ -s $RBENV_COMPLETER ]] && source $RBENV_COMPLETER

# grc (Generic Colouriser)
[[ -s "/etc/grc.zsh" ]] && source /usr/local/etc/grc.zsh

# Private configs
PRIVATE_RC="$HOME/.zshrc-private"
[[ -s $PRIVATE_RC ]] && source $PRIVATE_RC

# Uncomment and load zprof at the top to profile startup time
# zprof
