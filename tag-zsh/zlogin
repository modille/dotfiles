# Custom MOTD
MOTD_SCRIPT="$HOME/git/github.com/modille/motd/motd.sh"
[[ -s $MOTD_SCRIPT ]] && source $MOTD_SCRIPT

# AWS CLI completion
AWS_COMPLETER="/usr/local/bin/aws_zsh_completer"
[[ -s $AWS_COMPLETER ]] && source $AWS_COMPLETER

# Uncomment and run zprof at the end to profile startup time
# zmodload zsh/zprof

# rbenv
# Don't forget to `rbenv rehash` after installing new executables
eval "$(rbenv init - --no-rehash zsh)"

# direnv
if hash direnv 2>/dev/null; then
  eval "$(direnv hook zsh)"
fi

# iTerm2 shell integration
ITERM_SHELL_INTEGRATION="$HOME/.iterm2_shell_integration.zsh"
[[ -s $ITERM_SHELL_INTEGRATION ]] && source $ITERM_SHELL_INTEGRATION

# NVM
export NVM_DIR="/Users/odillem2/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"

# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  if [[ "$PWD" =~ "$HOME/git" ]]; then
    local node_version="$(nvm version)"
    local nvmrc_path="$(nvm_find_nvmrc)"

    if [ -n "$nvmrc_path" ]; then
      local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

      if [ "$nvmrc_node_version" = "N/A" ]; then
        nvm install
      elif [ "$nvmrc_node_version" != "$node_version" ]; then
        nvm use
      fi
    elif [ "$node_version" != "$(nvm version default)" ]; then
      echo "Reverting to nvm default version"
      nvm use default
    fi
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

# Uncomment and load zprof at the top to profile startup time
# zprof
